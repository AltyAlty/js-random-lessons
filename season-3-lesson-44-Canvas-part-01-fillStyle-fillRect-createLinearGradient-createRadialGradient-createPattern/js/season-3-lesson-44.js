const canvas = document.getElementsByClassName('canvas-one')[0];
const ctx = canvas.getContext('2d');

/*Метод "fillStyle()" задаtт цвет или стиль, используемый при заливке фигур.*/
ctx.fillStyle = 'rgb(200,0,0)';
/*Метод "fillRect()" рисует залитый прямоугольник в позиции, указанной по координатами x и y, задаваемым первыми
двумя параметрами, размер которого определяется аргументами width и height, которые задаются 3 и 4-м параметрами.
Стиль прямоугольника определяется методом "fillStyle()".*/
ctx.fillRect(10, 10, 55, 50);

/*-------------------------------------------------------------------------------------------------------------*/

/*Метод "createLinearGradient()", создает градиент вдоль линии, соединенной двумя точками с заданными 
координатами. Этот метод возвращает линейный градиент в виде специального объекта. Для того, чтобы быть 
добавленным к фигуре, градиент должен быть задан методами "fillStyle()" или "strokeStyle()". Метод 
"createLinearGradient()" принимает 4 параметра: сначала координаты x и y, обозначающие начальную точку
линии градиента, а затем координаты x и y, обозначающие конечную точку линии градиента.*/
let linearGradient = ctx.createLinearGradient(75, 10, 130, 10);

/*Метод "addColorStop" позволяет градиенту задавть точки остановки цвета между созданными начальной и конечной 
точками линии градиента. Этот метод принимает два параметра: смещение и цвет. Смещение указывается числом от 0 до 
1 включительно, представляющее положение точки остановки цвета. 0 представляет начало градиента, а 1 представляет 
конец.*/
linearGradient.addColorStop(0, 'green');
linearGradient.addColorStop(0.5, 'cyan');
linearGradient.addColorStop(1, 'green');

console.log(linearGradient);

ctx.fillStyle = linearGradient;
ctx.fillRect(75, 10, 55, 50);

/*-------------------------------------------------------------------------------------------------------------*/

/*Метод "createRadialGradient()", создает радиальный градиент, используя размер и координаты двух кругов. Этот 
метод возвращает радиальный градиент в виде специального объекта. Для того, чтобы быть добавленным к фигуре, 
градиент должен быть задан методами "fillStyle()" или "strokeStyle()". Метод "createRadialGradient()" принимает 
6 параметра: сначала координаты x и y, обозначающие точку начального круга, затем третьим параметром указывается 
радиус начального круга, четвертым и пятыми параметрами указываются координаты x и y, обозначающие точку конечного 
круга, затем последним параметром указывается радиус конечного круга.*/
let radialGradient = ctx.createRadialGradient(154, 35, 1, 181, 35, 35);

radialGradient.addColorStop(0, 'pink');
radialGradient.addColorStop(0.5, 'white');
radialGradient.addColorStop(1, 'green');

console.log(radialGradient);

ctx.fillStyle = radialGradient;
ctx.fillRect(140, 10, 55, 50);

/*-------------------------------------------------------------------------------------------------------------*/

setTimeout(function () {
    let img = document.getElementsByClassName('logo-to-repeat')[0];
/*Метод "createPattern()", создает шаблон, который может быть представлен как картинка (непрозрачная), холст или 
видео, и может использоваться как градиент. Этот метод возвращает градиент в виде специального объекта. Для того, 
чтобы быть добавленным к фигуре, градиент должен быть задан методами "fillStyle()" или "strokeStyle()". Метод 
"createPattern()" принимает 2 параметра: первым параметром указывается картинка (непрозрачная), холст или 
видео, а вторым то, каким должен быть шаблон, например, повторяться ("repeat"), повторяться только горизонтально 
("repeat-x"), повторяться только вертикально ("repeat-y"), не повторяться ("no-repeat"). Используем здесь метод
"setTimeout()", так как изображение не всегда успевает прогружаться.*/
let pat = ctx.createPattern(img, 'repeat');
console.log(pat);

ctx.fillStyle = pat;
ctx.fillRect(600, 10, 220, 200);
}, 1000);