* {
    margin: 0;
    padding: 0;
}

.first-example,
.second-example,
.third-example,
.fourth-example,
.fifth-example,
.sixth-example {
    margin-bottom: 200px;
}

/*-------------------------------------------------------------------------------------------------------------*/

.first-img {
    width: 100px;
    height: 100px;
    border: 1px yellow solid;
}

.first-div {
    width: 200px;
    height: 200px;
    border: 4px red solid;
    margin-bottom: 300px;
}

/*Свойство "box-sizing" определяет как вычисляется общая ширина и высота элемента. Значение "content-box" дает 
стандартное поведение свойства "box-sizing". Если вы выставите элементу ширину 200 пикселей, то ширина его 
контента будет 200 пикселей, а ширина границ и padding при рендере будет добавлена к финальной ширине, 
делая элемент шире 200 пикселей. Значение "border-box" говорит браузеру учитывать любые границы и padding 
в значениях, которые вы указываете в ширине и высоте элемента. Если вы выставите элементу ширину 200 пикселей, 
то эти 200 пикселей будут включать в себя границы и padding, а контент сожмется, чтобы выделить для них место.
*/
.second-div {
    width: 200px;
    height: 200px;
    border: 4px green solid;
    box-sizing: content-box;
    padding: 96px;
}

.third-div {
    width: 200px;
    height: 200px;
    border: 4px red solid;
    margin-bottom: 300px;
}

/*padding в каждом направлении занимает по 96px, то есть, например из предоставленной ширины в 200px будет
вычтено 96px * 2 = 192px. Оставшиеся 8px ширины будут заняты границей 4px * 2 = 8px. В итоге сам контент элемента
будет сжат полностью, то есть например дочерний элемент "img" будет отрисовываться из центральной точки, а не
из левого верхнего угла. Если мы увеличим границу или padding, то получается, что мы превысим данную нам ширину
в 200px, что приведет к вытеканию элемента из родительского элемента.*/
.fourth-div {
    width: 200px;
    height: 200px;    
    border: 4px green solid;
    box-sizing: border-box;
    padding: 96px;
}