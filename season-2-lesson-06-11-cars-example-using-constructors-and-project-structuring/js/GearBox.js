/*Создаем конструктор, на основе, которого можно будет создавать объекты,
содержащие информацию о коробке передач машины.*/
function GearBox(carID) {
    this.carID = carID; /*Свойство, хранящее идентификатор машины. Будет браться от объекта,
    созданного при помощи конструктора "Car".*/

    this._infoBot = new InfoBot(); /*На основе конструктора "InfoBot" создаем объект "_infoBot".*/

    this.currentGearBoxValue = 'N'; /*Создаем свойство, которое будет хранить текущее значение 
    коробки передач. Изначально равно "N".*/

    this._gearBoxInterval; /*Создаем свойство, которое будет хранить функцию "setInterval()",
    которая будет увеличивать значение коробки передач каждую секунду. Сохраняя функцию 
    "setInterval()" в отдельное свойство, мы имеем возможность выключить ее в нужный для
    нас момент.*/
};

/*Добавляем в прототип конструктора "GearBox" методы.*/
GearBox.prototype = {
    startGearBox: function () { /*Метод, который вызывается, чтобы включить коробку передач 
        после того, как машина завелась.*/
        this.currentGearBoxValue = 1; /*Указываем начальное значение коробки передач.*/

        this._infoBot.log('Gearbox value of ' + this.carID + ' is ' + this.currentGearBoxValue);
        /*Вызывем метод "log()" у объекта "_infoBot", чтобы вывести в консоль текущее значение 
        коробки передач.*/

        var that = this; /*Сохраняем отдельно текущий контекст "this".*/

        this._gearBoxInterval = window.setInterval(function () {
            that._increasGearBoxValue();
        }, 1000); /*Вызываем функцию "setInterval()", которая каждую секунду будет вызывать
        метод "_increasGearBoxValue()" у объекта, созданного на основе конструктора "GearBox",
        чтобы увеличивать каждую секунду значение коробки передач. Причем этот метод вызывается 
        через сохраненный выше контекст "this", то есть контекст объекта, созданного на основе 
        конструктора "GearBox". Также сохранили в свойство "_gearBoxInterval" эту функцию 
        "setInterval()", чтобы можно было ее выключить в нужный для нас момент.*/
    },

    _increasGearBoxValue: function () { /*Метод, который при вызовае будет увеличивать значение 
        коробки передач.*/
        if (this.currentGearBoxValue < 5) {
            this.currentGearBoxValue++;
        }; /*Если значение коробки передачи не 5 или больше, то увеличиваем на это значение на 1.*/

        this._infoBot.log('Gearbox value of ' + this.carID + ' is ' + this.currentGearBoxValue);
        /*Вызывем метод "log()" у объекта "_infoBot", чтобы вывести в консоль текущее значение 
        коробки передач.*/
    },

    resetGearBox: function (isEngineBroken) { /*Метод, который при вызове будет выключать коробку
        передач и сбрасывать ее на "N", например, при поломке двигателя. Этот метод будет получать
        в качестве параметра информацию о том, сломан ли двигатель или нет.*/
        var that = this; /*Сохраняем отдельно текущий контекст "this".*/

        if (isEngineBroken === true) { /*Если двигатель сломался, то делаем следующее.*/
            window.clearInterval(that._gearBoxInterval); /*При помощи функции "clearInterval()" очищаем 
            свойство "_gearBoxInterval", чтобы значение коробки передач перестало увеличиваться. Причем 
            это свойство вызывается через сохраненный выше контекст "this", то есть контекст объекта, 
            созданного на основе конструктора "GearBox".*/

            this.currentGearBoxValue = 'N'; /*Указываем в свойстве "currentGearBoxValue" значение "N",
            чтобы указать текущее значение коробки передач как "N".*/

            this._infoBot.log('Gearbox value of ' + this.carID + ' is ' + this.currentGearBoxValue);
            /*Вызывем метод "log()" у объекта "_infoBot", чтобы вывести в консоль текущее значение 
            коробки передач.*/

            return this.currentGearBoxValue; /*В итоге этот метод возвращает текущее значение коробки 
            передач, чтобы можно было вывести это значение в HTML-разметке.*/
        };
    }
};