/*Если создать функцию-конструктор и затем вызвать ее, то поля с "this" внутри этого конструктора добавятся к
глобальному объекту "window", а не к какому-либо новому объекту, созданному на базе этого конструктора.*/

/*Имена функций-конструкторов обычно именуются с большой буквы.*/

var cars = {}; /*Создаем пустой объект, свойства которого в дальнейшем будут содержать объекты с информацией по
каждой машине.*/

(function () {
    var garage = document.getElementById('garage'); /*Находим элемент с идентификатором "garage" в
    HTML-разметке.*/

    /*Создаем 3 машины.*/
    for (var i = 0; i < 3; i++) {
        var div = document.createElement('div'); /*Для каждой машины создаем элемент "div".*/

        carID = 'car' + i; /*Для каждой машины создаем идентификатор.*/

        div.id = carID; /*Вписываем этот идентификатор в созданные нами элементы "div".*/

        garage.appendChild(div); /*При помощи функции "appendChild()" добавляем наши элементы "div" в конец списка
        дочерних элементов элемента с идентификатором "garage".*/

        cars['car' + i] = new Car('car' + i); /*Таким образом добавляем свойства в объект "cars", где каждое такое
        свойство будет объектом, созданным на основе конструктора "Car", и иметь имя "car0", "car1", "car2" и так далее.
        Каждый такой объект будет представлять из себя информацию о каждой созданной машине, которые будут иметь
        идентификаторы "car0", "car1", "car2" и так далее.*/
    };
})(); /*Это самовызывающаяся функция. Она сработает сама при запуске программы.*/