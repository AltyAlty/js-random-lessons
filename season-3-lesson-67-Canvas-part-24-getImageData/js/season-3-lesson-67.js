const canvas = document.getElementsByClassName('canvas-one')[0];
const ctx = canvas.getContext('2d');

/*-------------------------------------------------------------------------------------------------------------*/

/*Метод "getImageData()" возвращает объект "ImageData", представляющий базовые данные пикселей для указанной 
части холста. На этот метод не влияет матрица преобразования холста. Если указанный прямоугольник выходит за 
пределы холста, пиксели за пределами холста становятся прозрачными черными в возвращаемом объекте "ImageData".

Этот метод принимает следующие параметры:
- "sx" - координата x верхнего левого угла прямоугольника, из которого будет извлечен объект "ImageData".
- "sy" - координата y верхнего левого угла прямоугольника, из которого будет извлечен объект "ImageData".
- "sw" - ширина прямоугольника, из которого будет извлечен объект "ImageData".
- "sh" - высота прямоугольника, из которого будет извлечен объект "ImageData".
- "settings" - объект со свойством "colorSpace", задающим цветовое пространство данных изображения. Можно 
установить значение "srgb" для цветового пространства "sRGB" или "display-p3" для цветового пространства 
"display-p3". Необязательный.

В этом примере рисуется изображение, а затем используется метод "getImageData()" для захвата части холста. Мы 
этот метод для извлечения фрагмента изображения, начиная с (10, 20), с шириной 80 и высотой 230. Затем мы 
рисуем этот фрагмент три раза, последовательно располагая фрагменты ниже и правее последнего кусочка.*/

const image = new Image();
image.src = './src/src.jpg';

image.addEventListener('load', () => {
    ctx.drawImage(image, 0, 0, 380, 330);

    const imageData = ctx.getImageData(10, 20, 80, 230);
    ctx.putImageData(imageData, 460, 0);
    ctx.putImageData(imageData, 580, 50);
    ctx.putImageData(imageData, 700, 100);
});
