'use strict';

/*-------------------------------------------------------------------------------------------------------------------*/

let obj1 = {
    /*Сокращенная запись создания метода в объекте.*/
    doSomething() {

    }
};

/*-------------------------------------------------------------------------------------------------------------------*/

/*"this" не является фиксированным. В JS "this" является "свободным", его значение вычисляется в момент вызова метода 
и не зависит от того, где этот метод был объявлен, а скорее от того, какой объект вызывает метод.*/

let obj2 = {a: 'obj1'};
let obj3 = {a: 'obj2'};

function doSomething2() {
    console.log(this.a);
};

obj2.doSomething2 = doSomething2;
obj3.doSomething2 = doSomething2;

obj2.doSomething2(); // 'obj1'
obj3.doSomething2(); // 'obj2'

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------------*/

function doSomething3() {
    console.log(this);
};

doSomething3(); // в строгом режиме undefined, не в строгом режиме глобальный объект "Window".

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------------*/

/*У стрелочных функций нет "this". Если мы ссылаемся на "this" внутри такой функции, то оно берется из внешней 
нестрелочной функции функции. Это особенность стрелочных функций полезна, когда мы на самом деле не хотим иметь 
отдельное "this", а скорее хотим взять его из внешнего контекста.*/

let obj4 = {
    a: 'obj4',

    doSomething4() {
        let arrowFunction = () => console.log(this.a);

        arrowFunction();
    }
};

obj4.doSomething4(); // 'obj4'